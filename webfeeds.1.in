.TH WEBFEEDS 1 "5 February 2022" 1.0
.SH NAME
webfeeds \- collect web feed titles and links
.SH SYNOPSIS
.B webfeeds
.RB [ \-0 ]
.RB [ \-d
.IR database_dir ]
.RB [ \-l
.IR xslt_dir ]
.SH DESCRIPTION
.B webfeeds
reads standard input composed of newline separated URLs and potentially
produces a list of directories.
.P
If the line is empty or begins with a
.I #
character it will be skipped.  Any text after a URL is also ignored.
.P
If a feed was found to contain new entries then the directory to its database
will be written to standard output.  Inside this directory there will exist the
file
.I new
containing the recent entries.  The counterpart,
.IR archive ,
will contain all entries seen thusfar.
.P
The entries are separated by newlines and interspersed by spaces.  It consists
of the date in RFC3339 format at UTC0, followed by the URL and then the title.
.P
For example:
.P
.EE
    1970-01-01T01:00:00Z http://example.com/article Article Title for Example Entry
.EX
.P
.SH OPTIONS
.TP
.B \-0
The directories written to standard output will be separated by null bytes
instead of newlines.
.TP
.B \-d
Specify the
.I database_dir
under which the database will be maintained.
.TP
.B \-l
Specify the
.I xslt_dir
under which the necessary XSLT files can be found.
.SH EXIT STATUS
.B webfeeds
usually returns
.B zero
but errors from tools used within are able to write their own messages to
standard error.
.SH ENVIRONMENT
.TP
.B XDG_DATA_HOME
The directory used for storing the database.
.B \%HOME/.local/share
will be used if not set.
.SH FILES
.TP
.B \%XDG_DATA_HOME/webfeeds
Directory containing the database used to track new entries from web feeds.
.TP
.B \%M4_XSLTDIR
Directory containing the XSLT code used to transform web feed XML and write
formatted entries.
.P
For each
.I link
provided the extracted
.I domain
and
.I title
will be joined to create directories under which the
.IR new ", " archive " and "storage
files may be found.
.TP
.B \%XDG_DATA_HOME/webfeeds/db/domain/title/new
File containing newly discovered entries.
.TP
.B \%XDG_DATA_HOME/webfeeds/db/domain/title/archive
File containing roughly 3000 entries seen heretofore before being placed in
storage.
.TP
.B \%XDG_DATA_HOME/webfeeds/db/domain/title/storage
Directory containing gzip compressed archives which are produced once the
number of entries in the
.I archive
file exceeds 3000.
.P
The files
.IR etag ", " xml " and " recent
used for internal details may also be found.  Here the directory under
.I xml
is constructed with the URL as-is excluding the scheme part.
.TP
.B \%XDG_DATA_HOME/webfeeds/xml/url/etag
File used to store etag values used when querying servers for new additions in
order to prevent unnecessary bandwidth use.
.TP
.B \%XDG_DATA_HOME/webfeeds/xml/url/xml
The web feed data from which pertinent information is extracted.  This file is
removed immediately afterwards and should not be present under normal
circumstances.
.TP
.B \%XDG_DATA_HOME/webfeeds/db/domain/title/recent
File contains the freshly parsed results and used to produce the new file.  It
is removed immediately afterwards and should not be present under normal
circumstances.
.SH NOTES
Each time
.B webfeeds
is run the corresponding
.I new
files will be overwritten.  As a result one will not be able to use this file
as a means to track unread entries if it has not been processed before
subsequent runs.  The missed entries will nevertheless be found in the
.I archive
file or within the
.I storage
directory.
.SH EXAMPLES
The essential workflow of this tool can be demonstrated as follows:
.P
.EX
    $ cat feeds
    # linux news
    https://lwn.net/headlines/newrss

    $ webfeeds < feeds
    /home/earnest/.local/share/webfeeds/lwn.net/LWN.net

    $ cat /home/earnest/.local/share/webfeeds/db/lwn.net/LWN.net/new
    2022-02-14T14:50:31Z https://lwn.net/Articles/884757/ Security updates for Monday
    2022-02-14T00:15:57Z https://lwn.net/Articles/884689/ Kernel prepatch 5.17-rc4
    2022-02-11T16:46:15Z https://lwn.net/Articles/884301/ [$] Debian reconsiders NEW review
    ...
.EE
.P
Alone this is not particularly comfortable;
.B webfeeds
was designed to separate retrieval and storage from presentation.  Simple
scripts can be used to provide a reasonable feed reader, for example:
.P
.EX
    #!/bin/bash --

    while IFS= read -rd '' db; do
        printf -v prompt '[%s] %s' "$(wc -l < "$db"/new)" "${db##*/}"
        printf '%s\en' "$prompt" "${prompt//?/=}" "$(< "$db"/new)"
        printf '\ea\en'
    done < <(nice webfeeds -0 < feeds)
.EE
.SH SOURCE
.UR https://github.com/Earnestly/webfeeds
.UE
